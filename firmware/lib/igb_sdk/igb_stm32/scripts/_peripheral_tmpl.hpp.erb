// Generated by svd_parser.rb. Dont't edit please.
#ifndef <%= include_guard_name %>
#define <%= include_guard_name %>

#include <igb_stm32/base.hpp>
#include <array>

<% @parsed.keys.each do |group_name| %>
#define STM32_PERIPHGRP_<%= group_name.upcase %>_EXISTS 1
<% @parsed[group_name].keys.each do |periph_name| %>
#define STM32_PERIPH_<%= periph_name.upcase %>_EXISTS 1
<% end %>
<% end %>

#include <igb_stm32/base/info.hpp>

namespace igb_stm32 {

const struct PeripheralInfo {
<% @cpp_structs.each do |group_name, structs| %>
<% next if !structs || structs.empty? %>
<%  if schema.dig(group_name.to_sym, :singleton) %>
  const <%= schema[group_name.to_sym][:name] %> <%= group_name.downcase %> {
<%    structs.first[:attrs].each do |key, value| %>
    .<%= key %> = <%= value[:value] %>,
<%    end  %>
  };
<%  else %>
  const std::array<<%= schema[group_name.to_sym][:name] %>, <%= structs.size %>> <%= group_name.downcase %> {
<%    structs.each do |struct| %>
    <%= schema[group_name.to_sym][:name] %> {
<%      struct[:attrs].each do |key, value| %>
      .<%= key %> = <%= value[:value] %>,
<%      end %>
    },
<%    end %>
  };
<%  end %>
<% end %>
} PERIPHERAL_INFO;

}

#endif /* <%= include_guard_name %> */
